/**
 * 1. Write a program to print “Bright IT Career” ten times using for loop
 */
package com.nm.loops;

public class PrintTenTimesForLoop {
    public static void main(String[] args) {
        //If the number of iteration is fixed then use for loop
        // Syntax : for(initialization ; condition ; increment/decrement)
        //loop Executes from 1 to 10
        for (int i = 1; i <= 10; i++) {
            System.out.println(i + ".Bright IT Career");
        }
    }
}

/**
 * 2. Write a java program to print 1 to 20 numbers using the while loop.
 */

public class PrintingNumbers {
    public static void main(String[] args) {
        int i = 1;
        //In while loop we separately need to initialize and increment the variable
        //loop executes from 1 to 20
        while (i <= 20) {
            System.out.print(i + " ");
            //Every time the loop body is executed, this expression increments
            i++;
        }
    }
}


/**
 *
 * 3. Program to equal operator and not equal operators.
 * 4. Write a program to print the odd and even numbers.
 */

import java.util.Scanner;

public class EvenAndOddNumbers {

    static void evenNumbers(int n) {
        System.out.println("These are Even Numbers from 0 to " + n);
        //loop executes until the condition becomes false
        for (int i = 1; i <= n; i++) {
            //using equal operator ( == )
            //If it is divided by 2,leaves remainder 0 then it is even number
            if (i % 2 == 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println(" ");
    }

    static void oddNumbers(int n) {
        System.out.println("\nThese are Odd Numbers from 1 to " + n);
        for (int i = 1; i <= n; i++) {
            // using not equal operator( != )
            // If the remainder is not equal to 0 then given number is odd number
            if (i % 2 != 0) {
                System.out.print(i + " ");
            }
        }
    }

    public static void main(String[] args) {
        int num;
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter any Number : ");
        //input stored in num
        num = sc.nextInt();
        //Even Numbers method
        evenNumbers(num);
        //Even Numbers method
        oddNumbers(num);
    }
}

/**
 *
 *  5. Write a program to print largest number among three numbers.
 */

import java.util.Scanner;

public class LargestAmongNumbers {
    public static void main(String[] args) {

        int a, b, c;
        Scanner num = new Scanner(System.in);
        //inputs are stored in a,b,c.
        System.out.print("Enter First Number : ");
        a = num.nextInt();
        System.out.print("Enter Second Number : ");
        b = num.nextInt();
        System.out.print("Enter Third Number : ");
        c = num.nextInt();

        //Executes if a is largest
        if ((a > b) && (a > c)) {
            System.out.println("The Largest Number is : " + a);
        }
        //Executes if b is largest
        else if ((b > a) && (b > c)) {
            System.out.println("The Largest Number is : " + b);
        }
        //Executes if a,b are not largest
        else {
            System.out.println("The Largest Number is : " + c);
        }
    }
}

/**
 *
 * 6. Write a program to print even number between 10 and 100 using while
 */

public class EvenNumbers10_100 {
    public static void main(String[] args) {

        System.out.println("The Even Numbers between 10 and 100 are : ");
        int i = 10;
        //loop executes from 10 to 100
        while (i <= 100) {
            System.out.println(i);
            i += 2;
        }
    }
}

/**
 *
 * 8. Write a program to find Armstrong number or not.
 */

import java.util.Scanner;
/* An Armstrong number is a positive m-digit number that is equal to
    the sum of the mth powers of their digits. */
public class ArmstrongNumber {

    static boolean isArmstrong(int n) {
        int r, result = 0;
        //assigning n to a temp variable
        int temp = n;
        //loop executes when the condition is true
        while (n != 0) {
            r = n % 10;
            /* LOGIC : power of r for each individual and add those numbers
            eg: 153 = 1^3 + 5^3 + 3^3 ==> 1 + 125 + 27 ==> 153 */
            result += (r * r * r);
            n = n / 10;
        }
        //returns if orig and result are equal
        return temp == result;
    }

    public static void main(String[] args) {
        System.out.print("Enter a number : ");
        //User Input stored in num
        int num = new Scanner(System.in).nextInt();
        //if(true)
        if (isArmstrong(num)) {
            System.out.println(num + " is an Armstrong number");
        } else {
            System.out.println(num + " is not an Armstrong number");
        }
        /* The first few Armstrong numbers between 0 to 999 are
            1, 2, 3, 4, 5, 6, 7, 8, 9, 153, 370, 371, 407. */
    }
}


/**
 *
 * 9. Write a program to find the prime or not.
 */

import java.util.Scanner;

/* prime numbers can't be divided by other numbers than itself or 1.
    For example 2, 3, 5, 7, 11, 13, 17.... are the prime numbers. */
public class PrimeNumber {

    static void primeNumber(int n) {
        //initially we set "isPrime" to false
        boolean isPrime = false;
        //Prime numbers are only divisible by 1 and the number itself.
        for (int i = 2; i <= n / 2; ++i) {
            if (n % i == 0) {
                isPrime = true;
                break;
            }
        }
        //Executes if(not true)
        if (!isPrime) {
            System.out.println(n + " is a Prime Number");
        } else {
            System.out.println(n + " is not a Prime Number");
        }
    }

    public static void main(String[] args) {
        int num;
        System.out.print("Enter a Number to check if its prime number: ");
        //User Input stores in num
        num = new Scanner(System.in).nextInt();
        //calling method
        primeNumber(num);
    }
}

/**
 *
 * 10. Write a program to palindrome or not
 */

import java.util.Scanner;

public class PalindromeNumber {
    //A palindrome number is one that remains the same on reversal
    //Eg : 121, 545, 151, 34543, It can also be a string like LOL, MADAM etc
    static boolean palindromeNumber(int num) {
        int r, sum = 0, temp;
        //Copy number into a temporary variable and reverse it.
        temp = num;
        while (num > 0) {
            r = num % 10; //getting remainder
            sum = (sum * 10) + r;
            num = num / 10;
        }
        //Compare the temporary number with reversed number
        // Returns if temp and sum are equal
        return temp == sum;
    }

    public static void main(String[] args) {
        int num;
        System.out.print("Enter a value : ");
        num = new Scanner(System.in).nextInt();
        //if(true)
        if (palindromeNumber(num)) {
            System.out.println(num + " is a Palindrome Number");
        } else {
            System.out.println(num + " is not a Palindrome Number");
        }
    }
}


/**
 *
 * 11. Program to check whether a number is EVEN or ODD using switch
 */

import java.util.Scanner;

public class EvenOrOddNumberSwitch {

    public static void main(String[] args) {
        int n;
        System.out.print("Enter a number : ");
        //user input stored in n
        n = new Scanner(System.in).nextInt();

        //The Java switch statement executes one statement from multiple conditions.
        //The case values must be unique. In case of duplicate value, it renders compile-time error.
        switch (n % 2) {
            //Even number has a remainder of 0 if divided by 2
            case 0:
                System.out.println(n + " is an Even Number");
                break;
            //Odd number has a remainder of 1 if divided by 2
            case 1:
                System.out.println(n + " is an Odd Number");
                break;
        }
    }
}

/**
 * 12. Print gender (Male/Female) program according to given M/F using switch.
 */

import java.util.Scanner;

public class MaleFemaleSwitch {
    public static void main(String[] args) {

        System.out.print("Enter a Character (M/F)  : ");
        Scanner sc = new Scanner(System.in);
        //The Java String class "charAt()" method returns a char value at the given index number.
        char Gender = sc.next().charAt(0);
        //The Java switch statement executes one statement from multiple conditions.
        switch (Gender) {
            //The case values must be unique. In case of duplicate value, it renders compile-time error.
            case 'M':
                System.out.println("Gender is Male");
                break;
            case 'F':
                System.out.println("Gender is Female");
                break;
        }
    }
}


/**
 *
 * 13. Program for multiple if else statement(The Largest number in 10,20 and 30)
 */

public class MultipleIfElseStatement {
    public static void main(String[] args) {

        int a = 10, b = 20, c = 30;
        // Executes if a is greater than b & c
        if (a > b && a > c) {
            System.out.println(a + " is the Largest Number");

        }
        // Executes if b is greater than a & c
        else if (b > a && b > c) {
            System.out.println(b + " is the Largest Number");
        }
        // Executes if both a & b are smaller than c
        else {
            System.out.println(c + " is the Largest Number");
        }
    }
}

